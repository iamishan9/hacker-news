{"version":3,"sources":["component/Navbar.js","api/api.js","component/CommentChild.js","component/Comment.js","component/Spinner.js","component/ListItem.js","utils/utils.js","component/TopStories.js","routes/routes.js","component/Main.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Link","to","Component","BASE_URL","getStoriesIndexArray","storiesType","axios","get","concat","then","res","data","catch","err","getItem","id","STORY_TYPE","TOP_STORIES","getComments","_x","_getComments","apply","this","arguments","_callee","commentId","newsData","regenerator_default","wrap","_context","prev","next","sent","abrupt","Promise","resolve","stop","CommentChild","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","kids","forEach","kid","apiFunc","setState","toConsumableArray","state","error","errors","key","dangerouslySetInnerHTML","__html","text","Date","time","toLocaleString","map","value","Comment","comments","_this2","history","location","_this$state","title","length","component_CommentChild","Spinner","react_spinners","color","ListItem","asyncToGenerator","mark","idLoaded","position","href","url","score","by","pathname","descendants","component_Spinner","getPosition","index","pageNumber","getShowStoryList","array","slice","TopStories","newArray","allStoryIdList","showStoryIdList","currentPageNumber","storyId","component_ListItem","ROUTES","ROOT","ITEM","Main","Switch","Route","exact","path","component","component_Comment","App","component_Navbar","component_Main","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56755195.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../App.css';\n\n/**\n * This class contains Navbar elements.\n *\n * @class Navbar\n * @extends {Component}\n */\nclass Navbar extends Component {\n  /**\n   *\n   *\n   * @returns {object}\n   * @memberof Navbar\n   */\n  render() {\n    return (\n      <div className=\"navbar clearfix\">\n        <div className=\"logo\">\n          <Link to=\"/\">Hacker News</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import axios from 'axios';\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0/';\n\n/**\n *\n * @returns {object}\n * @param {*} storiesType\n */\nexport const getStoriesIndexArray = storiesType => {\n  return axios\n    .get(`${BASE_URL}${storiesType}.json`)\n    .then(res => {\n      return res.data;\n    })\n    .catch(err => {\n      return err;\n    });\n};\n\n/**\n *\n * @returns {promise}\n * @param {string} id\n */\nexport const getItem = id => {\n  return axios\n    .get(`${BASE_URL}item/${id}.json`)\n    .then(res => {\n      return res.data;\n    })\n    .catch(err => {\n      return err;\n    });\n};\n\nexport const STORY_TYPE = {\n  TOP_STORIES: 'topstories'\n};\n\n\nexport async function getComments( commentId) {\n  const newsData = await axios.get(`${BASE_URL}item/${commentId}.json`);\n\n  return Promise.resolve(newsData);\n}\n","import React, { Component } from 'react';\r\nimport * as apiFunc from '../api/api';\r\n\r\n/**\r\n * @class Comments\r\n * @augments {Component}\r\n */\r\nclass CommentChild extends Component {\r\n  /**\r\n   * Creates an instance of Comments.\r\n   *\r\n   * @param {*} props\r\n   * @memberof Comments\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { CommentChild: [] };\r\n  }\r\n\r\n  /**\r\n   * @memberof Comments\r\n   * Recursively calls api for each comments childrens.\r\n   * Sets those childrens in state.\r\n   */\r\n  componentDidMount = () => {\r\n    const { kids } = this.props.data;\r\n\r\n    if (kids) {\r\n      kids.forEach(kid => {\r\n        apiFunc\r\n          .getComments(kid)\r\n          .then(data =>\r\n            this.setState({\r\n              CommentChild: [...this.state.CommentChild, data.data]\r\n            })\r\n          )\r\n          .catch(error => error);\r\n      });\r\n    } else {\r\n      this.setState({ errors: 'no CommentChild to display' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <li className=\"comment-list\" key={data.id} dangerouslySetInnerHTML={{ __html: data.text }} />\r\n        <div className=\"story-time\">createdAt: {new Date(data.time).toLocaleString()}</div>\r\n\r\n        {this.state.CommentChild ? (\r\n          this.state.CommentChild.map(value => (\r\n            <div className=\"child-comment\" key={value.id}>\r\n              <CommentChild data={value} key={value.id} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"progress progress-bar\">\r\n            <div className=\"indeterminate\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentChild;\r\n","import React, { Component } from 'react';\r\n\r\nimport * as apiFunc from '../api/api';\r\nimport CommentChild from './CommentChild';\r\n\r\nclass Comment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comments: [],\r\n      errors: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const comments = this.props.history.location.state.data.kids;\r\n\r\n    if (comments) {\r\n      comments.forEach(kids => {\r\n        apiFunc\r\n          .getComments(kids)\r\n          .then(data =>\r\n            this.setState({\r\n              comments: [...this.state.comments, data.data]\r\n            })\r\n          )\r\n          .catch(error => error);\r\n      });\r\n    } else {\r\n      this.setState({ errors: 'no comments to display' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { comments, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"container local-container list-container\">\r\n        <div className=\"story-comment-title\">{this.props.history.location.state.data.title}</div>\r\n        {comments.length !== 0 ? (\r\n          <ul>\r\n            {comments.map(data => (\r\n              <CommentChild data={data} key={data.id} />\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div> {errors}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comment;\r\n","import React from 'react';\n\nimport { PropagateLoader } from 'react-spinners';\n/**\n *\n * @returns {object}.\n */\nconst Spinner = () => (\n          <div className='spinner-container'>\n            <PropagateLoader  color={'#4285F4'} />\n          </div>\n);\n\nexport default Spinner;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport Spinner from './Spinner';\nimport { getItem } from '../api/api';\n\nimport '../App.css';\n\n/**\n * This class is for rendering the stories in list.\n *\n * @class ListItem\n * @extends {Component}\n */\nclass ListItem extends Component {\n  /**\n   * Instance of ListItem.\n   *\n   * @param {object} props\n   * @memberof ListItem\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data:{},\n      position:this.props.position,\n      idLoaded: false\n    };\n  }\n\n  /**\n   *\n   *\n   * @memberof ListItem\n   */\n  componentDidMount = async () => {\n    const data = await getItem(this.props.id);\n    this.setState({\n      data,\n\n      idLoaded: true\n    });\n  };\n\n  /**\n   *\n   *\n   * @returns {object}\n   * @memberof Post\n   */\n  render() {\n    return !this.state.idLoaded ? (\n      <Spinner />\n    ) : (\n      \n      <div className=\"post-item clearfix\">\n        <div className=\"post-left left clearfix\">\n          <div className=\"left post-position\">{this.state.position}.</div>\n        </div>\n        <div className=\"left post-right clearfix\">\n          <div className=\"post-top-section clearfix\">\n            <div className=\"left post-title\">\n              <a href={this.state.data.url}>{this.state.data.title}</a>\n            </div>\n          </div>\n\n          <div className=\"post-bottom-section clearfix\">\n            <div className=\"post-points left\">{this.state.data.score} points</div>\n\n            <div className=\"post-by left\">\n              By\n              <Link to=\"#\"> {this.state.data.by}</Link>\n            </div>\n\n            <div className=\"post-comment left\">\n              {/* <Link to={`/${this.state.id}`}>{this.state.descendants} comments</Link> */}\n               <Link to={{\n                          pathname: `${this.state.data.id}`,\n                          state: {\n                            data: this.state.data\n                          }\n                        }}>{this.state.data.descendants} comments</Link>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nListItem.propTypes = {\n  id: PropTypes.number\n};\n\nexport default ListItem;\n\n","/**\n *\n * @param {number} index\n * @param {number} pageNumber\n * @returns {number}\n */\nexport const getPosition = (index, pageNumber) => {\n  return index + 1 + pageNumber * 30;\n};\n\n\nexport /**\n *\n *\n * @param {*} array\n * @param {*} pageNumber\n * @returns\n */\nconst getShowStoryList = (array, pageNumber) => {\n  return array.slice(pageNumber * 30, (pageNumber + 1) * 30);\n};\n","import React, { Component } from 'react';\n\nimport Spinner from './Spinner';\nimport ListItem from './ListItem';\n\nimport { getStoriesIndexArray, STORY_TYPE } from '../api/api';\nimport { getPosition, getShowStoryList } from '../utils/utils';\n\nimport '.././App.css';\n\n/**\n *\n *\n * @class TopStories\n * @extends {Component}\n */\nclass TopStories extends Component {\n  /**\n   * Creates an instance of TopStories.\n   *\n   * @memberof TopStories\n   */\n  constructor() {\n    super();\n    this.state = {\n      allStoryIdList: [],\n      showStoryIdList: [],\n      currentPageNumber: 0\n    };\n  }\n\n  /**\n   *\n   *\n   * @memberof TopStories\n   */\n  componentDidMount = async () => {\n    const newArray = await getStoriesIndexArray(STORY_TYPE.TOP_STORIES);\n\n    this.setState({\n      allStoryIdList: newArray,\n      showStoryIdList: getShowStoryList(newArray, 0)\n    });\n  };\n\n  /**\n   *\n   *\n   * @returns {object}\n   * @memberof TopStories\n   */\n  render() {\n    return (\n      <div>\n        {!this.state.showStoryIdList.length ? (\n          <Spinner />\n        ) : (\n          this.state.showStoryIdList.map((storyId, index) => {\n            return <ListItem key={storyId} position={getPosition(index, this.state.currentPageNumber)} id={storyId} />;\n          })\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TopStories;\n","const ROUTES = {\n  ROOT: '/',\n  ITEM: '/item/'\n};\n\nexport default ROUTES;\n","import React from 'react';\nimport { Route , Switch  } from 'react-router-dom';\n\nimport Comment from './Comment';\nimport TopStories from './TopStories';\n\nimport ROUTES from '../routes/routes';\nimport '../App.css';\n\n/**\n * This is just a functional component.\n *\n * @returns {object}\n */\nconst Main = () => {\n  return (\n    <div className=\"main \">\n      <Switch>\n        <Route exact path={ROUTES.ROOT} component={TopStories} />\n        <Route path ={\"/:id\"} component={props => <Comment {...props} />} />\n      </Switch> \n    </div>\n  );\n};\n\nexport default Main;\n","import React, { Component } from 'react';\n\nimport Navbar from './component/Navbar';\nimport Main from './component/Main';\n\nimport './App.css';\n\n/**\n *\n *\n * @class App\n * @extends {Component}\n */\nclass App extends Component {\n  /**\n   *\n   *\n   * @returns {object}\n   * @memberof App\n   */\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Navbar />\n        <Main />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}